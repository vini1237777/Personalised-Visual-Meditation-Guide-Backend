name: Deploy Fullstack App on EC2

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  deploy:
    runs-on: self-hosted

    # Corrected indentation for strategy and matrix
    strategy:
      matrix:
        node-version: [22.x]

    # Corrected indentation for steps
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          # cache-dependency-path: |
          #   ./backend/package-lock.json
          #   client/package-lock.json

      # ------------------------------
      # BACKEND SETUP
      # ------------------------------
      - name: Install backend dependencies
        # working-directory: ./backend
        run: npm install

      - name: Create backend .env file
        # working-directory: ./backend
        run: |
          touch .env
          echo "${{ secrets.PROD_BACKEND_ENV }}" > .env

      # - name: Start backend with PM2
      #   working-directory: src/app.ts
      #   run: |
      #     /home/ubuntu/.nvm/versions/node/v22.16.0/user/bin/pm2 restart backend || /home/ubuntu/.nvm/versions/node/v22.16.0/user/bin/pm2 start app.ts --name backend
      #     || pm2 start backend

      - name: Deploy/Restart PM2 Service
        # Set the working directory to the compiled output (e.g., backend/dist)
        working-directory: backend/dist
        run: |
          # Define PM2 binary path using the stable system path
          PM2_BIN=/usr/bin/pm2

          # 1. Attempt restart
          $PM2_BIN restart backend 

          # 2. Check the exit status of the previous command
          if [ $? -ne 0 ]; then
            echo "Backend process not found. Starting new service..."
            # Run the COMPILED JAVASCRIPT file
            $PM2_BIN start app.js --name backend
          fi

      # # ------------------------------
      # # FRONTEND SETUP
      # # ------------------------------
      # - name: Clean npm cache & remove existing dependencies
      #   working-directory: ./client
      #   run: |
      #     rm -rf node_modules package-lock.json
      #     npm cache clean --force

      # - name: Install frontend dependencies
      #   working-directory: ./client
      #   run: npm install

      # - name: Create frontend .env file
      #   working-directory: ./client
      #   run: |
      #     touch .env
      #     echo "${{ secrets.PROD_FRONTEND_ENV }}" > .env

      # - name: Build frontend
      #   working-directory: ./client
      #   run: npm run build

      # - name: Deploy frontend to Nginx
      #   run: |
      #     sudo rm -rf /var/www/html/*
      #     sudo cp -r ./client/dist/* /var/www/html/
