name: Deploy Backend App on EC2

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read
  issues: write

jobs:
  deploy:
    runs-on: self-hosted

    # Corrected indentation for strategy and matrix
    strategy:
      matrix:
        node-version: [22.x]

    # Corrected indentation for steps
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: "npm"
          # cache-dependency-path: |
          #   ./backend/package-lock.json
          #   client/package-lock.json

      # ------------------------------
      # BACKEND SETUP
      # ------------------------------
      - name: Install backend dependencies
        working-directory: src
        run: npm install

      - name: Install build
        # working-directory: ./backend
        run: npm run build

      - name: Create backend .env file
        working-directory: src
        run: |
          touch .env
          echo "${{ secrets.PROD_BACKEND_ENV }}" > .env

      - name: Deploy/Restart PM2 Service
        working-directory: dist
        run: |
          PM2_BIN=$(which pm2)      
          $PM2_BIN restart backend || $PM2_BIN start app.js --name backend

        #  $PM2_BIN start app.ts --interpreter ts-node
      # # ------------------------------
      # # FRONTEND SETUP
      # # ------------------------------
      # - name: Clean npm cache & remove existing dependencies
      #   working-directory: ./client
      #   run: |
      #     rm -rf node_modules package-lock.json
      #     npm cache clean --force

      # - name: Install frontend dependencies
      #   working-directory: ./client
      #   run: npm install

      # - name: Create frontend .env file
      #   working-directory: ./client
      #   run: |
      #     touch .env
      #     echo "${{ secrets.PROD_FRONTEND_ENV }}" > .env

      # - name: Build frontend
      #   working-directory: ./client
      #   run: npm run build

      # - name: Deploy frontend to Nginx
      #   run: |
      #     sudo rm -rf /var/www/html/*
      #     sudo cp -r ./client/dist/* /var/www/html/
